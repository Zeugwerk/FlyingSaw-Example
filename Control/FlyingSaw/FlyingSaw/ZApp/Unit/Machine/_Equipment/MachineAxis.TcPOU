<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="MachineAxis" Id="{dcde6f80-2a3b-42de-b06e-a2eddf367238}" SpecialFunc="None">
    <Declaration><![CDATA[/// This function block is a container for all axis objects that are used by this unit.
/// The parent of all objects can be directly transfered in their constructor (this is only relevant for equipment objects
/// that have to be managed (e.g. [DebouncedInput](xref:ZEquipment.DebouncedInput), [Light](xref:ZEquipment.Light), ...).
FUNCTION_BLOCK MachineAxis EXTENDS MachineContainer
VAR
  {attribute 'hide'}
  _axisbridge : ZApplication.AxisBridge(_parent);
END_VAR
VAR_INPUT

{region "TransportX : AxisPlcOpenMc"}
  TransportX : ZEquipment.AxisSimulated(_parent);
  {attribute 'ZId' := 'e985697b-7ba2-4e1b-acce-25e7c1308b60'}
{endregion}

{region "ToolX : AxisPlcOpenMc"}
  ToolX : ZEquipment.AxisSimulated(_parent);
  {attribute 'ZId' := '805b377d-816e-493b-a105-09954c5e25a1'}
{endregion}

{attribute '__ZwPlcUnitEquipmentDeclaration__'} // Do not remove this attribute! It is used for code generation.
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF _isInitialized
THEN
  RETURN;
END_IF

  _axisbridge.SetLogger(_parent._logger);

{region "TransportX : AxisPlcOpenMc"}
  TransportX.SetLogger(_parent._logger);
  TransportX.SetName(name:='TransportX');
  TransportX.SetSimulation(_parent._data.Config.Simulated);
  _axisbridge.WithHoming(TransportX)
     .WithMovePosition(TransportX)
     .WithMoveVelocity(TransportX)
     .WithHalt(TransportX)
     .WithVelocityFeedrate(TransportX)
     .WithFeedbackPosition(TransportX)
     .WithFeedbackVelocity(TransportX)
     .WithFeedbackCurrent(TransportX)
     .AddAxis (axis:=TransportX, publish:=_parent._com.Publish.Equipment.TransportX, subscribe:=_parent._com.Subscribe.Equipment.TransportX);


  {region "UserInitCode"}
  // put your individual init code for this Axis here
  {endregion}

  {attribute 'ZId' := 'e985697b-7ba2-4e1b-acce-25e7c1308b60'}
{endregion}

{region "ToolX : AxisPlcOpenMc"}
  ToolX.SetLogger(_parent._logger);
  ToolX.SetName(name:='ToolX');
  ToolX.SetSimulation(_parent._data.Config.Simulated);
  _axisbridge.WithHoming(ToolX)
     .WithMovePosition(ToolX)
     .WithMoveVelocity(ToolX)
     .WithHalt(ToolX)
     .WithVelocityFeedrate(ToolX)
     .WithFeedbackPosition(ToolX)
     .WithFeedbackVelocity(ToolX)
     .WithFeedbackCurrent(ToolX)
     .AddAxis (axis:=ToolX, publish:=_parent._com.Publish.Equipment.ToolX, subscribe:=_parent._com.Subscribe.Equipment.ToolX);

  {region "UserInitCode"}
  // put your individual init code for this Axis here
  {endregion}

  {attribute 'ZId' := '805b377d-816e-493b-a105-09954c5e25a1'}
{endregion}

{attribute '__ZwPlcUnitEquipmentImplementation__'} // Do not remove this attribute! It is used for code generation.

_isInitialized := TRUE;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>